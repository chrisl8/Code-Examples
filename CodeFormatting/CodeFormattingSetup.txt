ESLint for AirBNB code style and Prettier code formatting in IntelliJ

ESLint recommends AGAINST installing globally,
but installing it locally in a package can cause problems.
For instance it will break create-react-app, because it already depends on possibly different versions.
NOTE: I also use jshint and js-beautify in vim, maybe I can change that?

npm install -g prettier

# In new projects that aren't create-react-app based:
npm i -D eslint prettier eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-plugin-react-hooks eslint-config-airbnb eslint-config-prettier eslint-plugin-prettier eslint-plugin-jasmine eslint-plugin-cypress babel-eslint

Eslint will check not only for formatting styles, but also code standards they like. Some of these I find too heavy handed for my requirements.

See my .eslintrc.js and .prettierrc files in this folder for more info.

NOTE: Unfortunately it can be hard to tell if Eslint is even running. Use this code in your file to check:
    let bob == 'bob';

Note that you can put this anywhere in your IntelliJ folders. IntelliJ will look for it.

In IntelliJ settings Enable ESLint, point it to your "Project" version of node.
Find eslint in the same NVM folder, i.e.:
~/.nvm/current/lib/node_modules/eslint

and set Config File to Automatic.

NOTE: Auto format:

I have my IntelliJ code formatter as close to AirBNB/Prettier as I can,
so Ctrl+Alt+l will put it in a state that is close, but also will not break anything Prettier does.

To make Prettier auto format.
Press F2 to find a formatting error.
Pres Alt+Enter, Enter to have it "autofix" the file, which will format it.

Another option is a watcher to run it on save, but I haven't messed with that.
It seems like more work.

Another option is that IntelliJ now supports Prettier natively, although I'm not sure where it puts it as far as a command or when it runs it.

IntelliJ and NVM:
Add this line above the NVM stuff in .bashrc:
NVM_SYMLINK_CURRENT=true

Now you will get a ~/.nvm/current link to the current folder.
You can then use that path in IntelliJ, plus add
PATH="$HOME/.nvm/current/bin:$PATH"
to ~/.profile so that IntelliJ can see Node in your path!
(You must log out and back in for this to take effect.



# Python
Use Black for code formatting:
https://github.com/ambv/black

`sudo apt install python3-pip`
pip3 install black

Set up Watcher to use Black as directed for PyCharm

# Ignoring specific errors with Python
You can add any of these to a line before a line or function to ignore an issue with:
https://gist.github.com/pylover/7870c235867cf22817ac5b096defb768